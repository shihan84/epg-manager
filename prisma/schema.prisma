// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  name          String?
  password      String?
  role          UserRole @default(CLIENT)
  companyName   String?
  isActive      Boolean  @default(true)
  epgUrl        String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  channels      Channel[]
  programs      Program[]
  epgFiles      EpgFile[]
  
  @@map("users")
}

model Channel {
  id          String   @id @default(cuid())
  name        String
  displayName String?
  description String?
  logoUrl     String?
  streamUrl   String?
  number      Int?
  isActive    Boolean  @default(true)
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  schedules   Schedule[]
  
  @@map("channels")
}

model Program {
  id          String   @id @default(cuid())
  title       String
  description String?
  category    String?
  duration    Int?     // in minutes
  imageUrl    String?
  isRepeat    Boolean  @default(false)
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  schedules   Schedule[]
  
  @@map("programs")
}

model Schedule {
  id          String   @id @default(cuid())
  channelId   String
  programId   String
  startTime   DateTime
  endTime     DateTime
  isLive      Boolean  @default(false)
  isNew       Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  channel     Channel  @relation(fields: [channelId], references: [id], onDelete: Cascade)
  program     Program  @relation(fields: [programId], references: [id], onDelete: Cascade)
  
  @@map("schedules")
}

model EpgFile {
  id          String   @id @default(cuid())
  filename    String
  content     String
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("epg_files")
}

enum UserRole {
  ADMIN
  CLIENT
}